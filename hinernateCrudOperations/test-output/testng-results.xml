<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="9" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3447" started-at="2017-09-28T04:11:15Z" finished-at="2017-09-28T04:11:19Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3447" started-at="2017-09-28T04:11:15Z" finished-at="2017-09-28T04:11:19Z">
      <class name="com.scp.hinernateCrudOperations.TestBookImpl">
        <test-method status="PASS" signature="testAddBooks(com.scp.entities.Book)[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testAddBooks" duration-ms="2286" started-at="2017-09-28T09:41:15Z" data-provider="listOfBooks" finished-at="2017-09-28T09:41:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Book [bookId=1, bookName=Book1, authorName=Author1, bookPrice=100]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBooks -->
        <test-method status="PASS" signature="testAddBooks(com.scp.entities.Book)[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testAddBooks" duration-ms="125" started-at="2017-09-28T09:41:17Z" data-provider="listOfBooks" finished-at="2017-09-28T09:41:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Book [bookId=2, bookName=Book2, authorName=Author2, bookPrice=200]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBooks -->
        <test-method status="PASS" signature="testAddBooks(com.scp.entities.Book)[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testAddBooks" duration-ms="125" started-at="2017-09-28T09:41:17Z" data-provider="listOfBooks" finished-at="2017-09-28T09:41:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Book [bookId=3, bookName=Book3, authorName=Author3, bookPrice=400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBooks -->
        <test-method status="PASS" signature="testAddBooks(com.scp.entities.Book)[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testAddBooks" duration-ms="125" started-at="2017-09-28T09:41:18Z" data-provider="listOfBooks" finished-at="2017-09-28T09:41:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Book [bookId=4, bookName=Book4, authorName=Author4, bookPrice=500]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBooks -->
        <test-method status="PASS" signature="testAddBooks(com.scp.entities.Book)[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testAddBooks" duration-ms="125" started-at="2017-09-28T09:41:18Z" data-provider="listOfBooks" finished-at="2017-09-28T09:41:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Book [bookId=5, bookName=Book5, authorName=Author5, bookPrice=700]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBooks -->
        <test-method status="PASS" signature="testAddBooks(com.scp.entities.Book)[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testAddBooks" duration-ms="110" started-at="2017-09-28T09:41:18Z" data-provider="listOfBooks" finished-at="2017-09-28T09:41:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Book [bookId=6, bookName=Book6, authorName=Author6, bookPrice=20]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBooks -->
        <test-method status="PASS" signature="testExcetption()[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testExcetption" duration-ms="31" started-at="2017-09-28T09:41:18Z" finished-at="2017-09-28T09:41:18Z">
          <exception class="com.scp.implementation.SpecifiedBookNotFoundException">
            <message>
              <![CDATA[Book nhiye..]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.scp.implementation.SpecifiedBookNotFoundException: Book nhiye..
	at com.scp.implementation.BookCrudOpImpl.getBooks(BookCrudOpImpl.java:41)
	at com.scp.hinernateCrudOperations.TestBookImpl.testExcetption(TestBookImpl.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- com.scp.implementation.SpecifiedBookNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExcetption -->
        <test-method status="PASS" signature="testGetListOfBooks()[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testGetListOfBooks" duration-ms="125" started-at="2017-09-28T09:41:18Z" finished-at="2017-09-28T09:41:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetListOfBooks -->
        <test-method status="FAIL" signature="testUpdate()[pri:0, instance:com.scp.hinernateCrudOperations.TestBookImpl@23ceabc1]" name="testUpdate" duration-ms="364" started-at="2017-09-28T09:41:18Z" finished-at="2017-09-28T09:41:19Z">
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<...1> but was:<...>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<...1> but was:<...>
	at junit.framework.Assert.assertEquals(Assert.java:81)
	at junit.framework.Assert.assertEquals(Assert.java:87)
	at com.scp.hinernateCrudOperations.TestBookImpl.testUpdate(TestBookImpl.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
      </class> <!-- com.scp.hinernateCrudOperations.TestBookImpl -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
